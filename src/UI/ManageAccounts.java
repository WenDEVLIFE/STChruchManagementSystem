/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import database.UserMYSQLConnection;

import java.awt.*;

import model.UserModel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Frouen Junior
 */
public class ManageAccounts extends javax.swing.JFrame {

    DefaultTableModel userTableModel;
    List<UserModel> userList;
    /**
     * Creates new form ManageAccounts
     */
    public ManageAccounts() {
        initComponents();

        String [] columnNames = {"ID", "Username", "Password", "Role"};
        userTableModel = new DefaultTableModel(columnNames, 0);
        jTable1.setModel(userTableModel);
        LoadData();
         getContentPane().setBackground(new Color(214, 234, 248));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Username", "Password", "Role"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(255, 153, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Create new account");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 204, 0));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Back to Main Menu");
        jButton4.setActionCommand("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Options");

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("MANAGE ACCOUNTS");

        jButton2.setBackground(new java.awt.Color(153, 0, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Delete");
        jButton2.setActionCommand("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 204, 0));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Edit");
        jButton3.setActionCommand("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(309, 309, 309))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 14, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // This is for creating account
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CreateAccount();
    }//GEN-LAST:event_jButton1ActionPerformed

    // This is for the back to menu admin
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        AdminMainMenu adminmenu = new AdminMainMenu();
        adminmenu.setVisible(true);
        adminmenu.setResizable(false);
        adminmenu.setLocationRelativeTo(null);
        this.dispose(); // Close the current window
    }//GEN-LAST:event_jButton4ActionPerformed

    // This is for the delete user
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DeleteAccount();
    }//GEN-LAST:event_jButton2ActionPerformed

    // This si for edit the user
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       editAccount();
    }//GEN-LAST:event_jButton3ActionPerformed


    void CreateAccount() {
        // Create main panel with background color
        javax.swing.JPanel panel = new javax.swing.JPanel();
        panel.setBackground(new java.awt.Color(214, 234, 248)); // Light gray
        panel.setLayout(new javax.swing.BoxLayout(panel, javax.swing.BoxLayout.Y_AXIS));
        panel.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        // Create a sub-panel for the form inputs
        javax.swing.JPanel formPanel = new javax.swing.JPanel(new java.awt.GridLayout(0, 2, 5, 5));
        formPanel.setOpaque(false); // Keep background transparent to show parent panel color

        // Input fields
        javax.swing.JTextField lastNameField = new javax.swing.JTextField();
        javax.swing.JTextField firstNameField = new javax.swing.JTextField();
        javax.swing.JTextField middleNameField = new javax.swing.JTextField();
        javax.swing.JTextField contactField = new javax.swing.JTextField();
        javax.swing.JTextField addressField = new javax.swing.JTextField();
        javax.swing.JTextField usernameField = new javax.swing.JTextField();
        javax.swing.JPasswordField passwordField = new javax.swing.JPasswordField();
        javax.swing.JPasswordField confirmpasswordField = new javax.swing.JPasswordField();
        javax.swing.JComboBox<String> roleComboBox = new javax.swing.JComboBox<>(new String[]{"Admin", "User"});

        formPanel.add(new javax.swing.JLabel("Last Name:")); formPanel.add(lastNameField);
        formPanel.add(new javax.swing.JLabel("First Name:")); formPanel.add(firstNameField);
        formPanel.add(new javax.swing.JLabel("Middle Name:")); formPanel.add(middleNameField);
        formPanel.add(new javax.swing.JLabel("Contact Number:")); formPanel.add(contactField);
        formPanel.add(new javax.swing.JLabel("Address:")); formPanel.add(addressField);
        formPanel.add(new javax.swing.JLabel("Username:")); formPanel.add(usernameField);
        formPanel.add(new javax.swing.JLabel("Password:")); formPanel.add(passwordField);
        formPanel.add(new javax.swing.JLabel("Confirm Password:")); formPanel.add(confirmpasswordField);
        formPanel.add(new javax.swing.JLabel("Role:")); formPanel.add(roleComboBox);

        panel.add(formPanel);

        // Buttons
        javax.swing.JButton submitButton = new javax.swing.JButton("Submit");
        submitButton.setBackground(new java.awt.Color(0, 153, 76)); // Green
        submitButton.setForeground(java.awt.Color.WHITE);

        javax.swing.JButton cancelButton = new javax.swing.JButton("Cancel");
        cancelButton.setBackground(new java.awt.Color(204, 0, 0)); // Red
        cancelButton.setForeground(java.awt.Color.WHITE);

        javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
        buttonPanel.setBackground(new java.awt.Color(214, 234, 248));
        buttonPanel.add(submitButton);
        buttonPanel.add(cancelButton);

        panel.add(javax.swing.Box.createVerticalStrut(10)); // Add space between form and buttons
        panel.add(buttonPanel);

        javax.swing.JDialog dialog = new javax.swing.JDialog(this, "Create New Account", true);
        dialog.setContentPane(panel);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setResizable(false);

        // Button Actions
        submitButton.addActionListener(e -> {
            String lastName = lastNameField.getText();
            String firstName = firstNameField.getText();
            String middleName = middleNameField.getText();
            String contactNumber = contactField.getText();
            String address = addressField.getText();
            String username = usernameField.getText();
            String password = new String(passwordField.getPassword());
            String confirmPassword = new String(confirmpasswordField.getPassword());
            String role = (String) roleComboBox.getSelectedItem();

            if (lastName.isEmpty() || firstName.isEmpty() || middleName.isEmpty() || contactNumber.isEmpty() ||
                    address.isEmpty() || username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(dialog, "Please fill in all fields.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!password.equals(confirmPassword)) {
                javax.swing.JOptionPane.showMessageDialog(dialog, "Passwords do not match.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (UserMYSQLConnection.getInstance().checkUsernameExist(username)) {
                javax.swing.JOptionPane.showMessageDialog(dialog, "Username already exists.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
            }

            Map<String, Object> userdata = new HashMap<>();
            userdata.put("username", username);
            userdata.put("password", password);
            userdata.put("role", role);
            userdata.put("firstname", firstName);
            userdata.put("lastname", lastName);
            userdata.put("middlename", middleName);
            userdata.put("contactnumber", contactNumber);
            userdata.put("address", address);

            UserMYSQLConnection.getInstance().createAcccount(userdata);
            dialog.dispose();
            LoadData();
        });

        cancelButton.addActionListener(e -> dialog.dispose());

        dialog.setVisible(true);
    }



    void editAccount() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a user to edit.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Retrieve selected user's data from the table
        String currentUsername = (String) jTable1.getValueAt(selectedRow, 1);
        String currentPassword = (String) jTable1.getValueAt(selectedRow, 2);
        String currentRole = (String) jTable1.getValueAt(selectedRow, 3);

        // Create a panel to hold input fields
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(0, 2, 5, 5)); // Grid layout for labels and fields
        panel.setBackground(new Color(248, 192, 176)); // Set a light background color

        // Add input fields with pre-filled data
        panel.add(new JLabel("Username"));
        JTextField usernameField = new JTextField(currentUsername);
        panel.add(usernameField);

        panel.add(new JLabel("Password"));
        JPasswordField passwordField = new JPasswordField(currentPassword);
        panel.add(passwordField);

        panel.add(new JLabel("Confirm Password"));
        JPasswordField confirmpasswordField = new JPasswordField(currentPassword);
        panel.add(confirmpasswordField);

        panel.add(new JLabel("Role"));
        JComboBox<String> roleComboBox = new JComboBox<>(new String[]{"Admin", "User"});
        roleComboBox.setSelectedItem(currentRole);
        panel.add(roleComboBox);

        // Create custom button panel
        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
        buttonPanel.setBackground(new Color(248, 192, 176)); // Same background for button panel

        // Create "Save" button
        JButton saveButton = new JButton("Save Changes");
        saveButton.setBackground(new Color(225, 172, 48)); // Green background for Save button
        saveButton.setForeground(Color.WHITE);
        saveButton.setFocusPainted(false);
        saveButton.setPreferredSize(new Dimension(100, 40)); // Customize button size

        // Create "Cancel" button
        JButton cancelButton = new JButton("Cancel");
        cancelButton.setBackground(new Color(110, 116, 195)); // Red background for Cancel button
        cancelButton.setForeground(Color.WHITE);
        cancelButton.setFocusPainted(false);
        cancelButton.setPreferredSize(new Dimension(100, 40));

        // Add buttons to the button panel
        buttonPanel.add(saveButton);
        buttonPanel.add(cancelButton);

        // Wrap JOptionPane in a JDialog
        JDialog dialog = new JDialog(this, "Edit Account", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(panel, BorderLayout.CENTER);
        dialog.add(buttonPanel, BorderLayout.SOUTH);
        dialog.setSize(400, 250);
        dialog.setLocationRelativeTo(this); // Center the dialog
        dialog.setResizable(false);

        // Action listener for the "Save" button
        saveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());
                String confirmPassword = new String(confirmpasswordField.getPassword());
                String role = (String) roleComboBox.getSelectedItem();

                // Validate input
                if (username.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
                    JOptionPane.showMessageDialog(dialog, "Please fill in all fields.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                if (!password.equals(confirmPassword)) {
                    JOptionPane.showMessageDialog(dialog, "Passwords do not match.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Update the user's data in the database
                try {
                    boolean success = UserMYSQLConnection.getInstance().updateAccount(
                            (int) jTable1.getValueAt(selectedRow, 0), // User ID
                            username,
                            password,
                            role
                    );

                    if (success) {
                        JOptionPane.showMessageDialog(dialog, "Account updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        LoadData(); // Refresh the table
                    } else {
                        JOptionPane.showMessageDialog(dialog, "Failed to update account.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(dialog, "An error occurred: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }

                dialog.dispose(); // Close the dialog after the action
            }
        });

        // Action listener for the "Cancel" button
        cancelButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dialog.dispose(); // Close the dialog without saving
            }
        });

        dialog.setVisible(true); // Show the dialog
    }

    void DeleteAccount(){

        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a user to delete.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        int userId = (int) jTable1.getValueAt(selectedRow, 0); // Assuming the first column is the user ID

        int confirmation = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this account?", "Confirm Deletion", javax.swing.JOptionPane.YES_NO_OPTION);
        if (confirmation == javax.swing.JOptionPane.YES_OPTION) {
            // Proceed with deletion
            try {
                UserMYSQLConnection.getInstance().deleteAccount(userId);
                javax.swing.JOptionPane.showMessageDialog(this, "Account deleted successfully!", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                LoadData(); // Refresh the table
            } catch (Exception e) {
                e.printStackTrace();
                javax.swing.JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("User canceled the deletion.");
        }
    }

    void LoadData(){
        userTableModel = (DefaultTableModel) jTable1.getModel();
        userList = UserMYSQLConnection.getInstance().getUser();
        userTableModel.setRowCount(0); // Clear existing rows

        for (UserModel user : userList) {
            Object[] rowData = {
                user.getId(),
                user.getUsername(),
                user.getPassword(),
                user.getRole()
            };
            userTableModel.addRow(rowData);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAccounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageAccounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
