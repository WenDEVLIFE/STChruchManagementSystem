/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import database.BookMYSQL;

import java.util.Map;

/**
 *
 * @author Frouen Junior
 */
public class BookAnEvent extends javax.swing.JFrame {

    static int userId;
    /**
     * Creates new form BookAnEvent
     */
    public BookAnEvent(int userId) {
        initComponents();
        BookAnEvent.userId = userId;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("BOOK A EVENT");

        jButton1.setText("Back to Main Menu");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Christening");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Funeral");
        jButton3.setActionCommand("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Wedding");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(189, 189, 189))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // This is for the go back to main menu
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        UserMainMenu userMainMenu = new UserMainMenu(userId);
        userMainMenu.setVisible(true);
        userMainMenu.setLocationRelativeTo(null);
        this.dispose(); // Close the current window
    }//GEN-LAST:event_jButton1ActionPerformed

     // This is for the Christening
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        showChristening();
    }//GEN-LAST:event_jButton2ActionPerformed

    // This is for the funeral
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    showFuneral();
    }//GEN-LAST:event_jButton3ActionPerformed

    // This is for the wedding
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        showWedding();
    }//GEN-LAST:event_jButton4ActionPerformed

    // This will show the Christening dialog
    void showChristening(){
        // Create a panel to hold input fields
        javax.swing.JPanel panel = new javax.swing.JPanel();
        panel.setLayout(new java.awt.GridLayout(0, 2, 5, 5)); // Grid layout for labels and fields

// Add input fields
        panel.add(new javax.swing.JLabel("Enter Child's Name:"));
        javax.swing.JTextField nameField = new javax.swing.JTextField();
        panel.add(nameField);

        panel.add(new javax.swing.JLabel("Enter Parent's Name:"));
        javax.swing.JTextField parentNameField = new javax.swing.JTextField();
        panel.add(parentNameField);

        panel.add(new javax.swing.JLabel("Enter Contact Number:"));
        javax.swing.JTextField contactField = new javax.swing.JTextField();
        panel.add(contactField);

        panel.add(new javax.swing.JLabel("Enter Date (YYYY-MM-DD):"));
        javax.swing.JTextField enterDateField = new javax.swing.JTextField();
        panel.add(enterDateField);

        panel.add(new javax.swing.JLabel("Enter Time Slot:"));
        javax.swing.JTextField timeField = new javax.swing.JTextField();
        panel.add(timeField);

// Custom button options
        Object[] options = {"Submit", "Cancel"};

// Wrap JOptionPane in a JDialog
        javax.swing.JOptionPane optionPane = new javax.swing.JOptionPane(
                panel,
                javax.swing.JOptionPane.PLAIN_MESSAGE,
                javax.swing.JOptionPane.OK_CANCEL_OPTION,
                null,
                options,
                options[0]
        );
        javax.swing.JDialog dialog = optionPane.createDialog(this, "Enter Christening Details");
        dialog.setVisible(true);

// Handle user input
        Object selectedValue = optionPane.getValue();
        if (selectedValue != null && selectedValue.equals("Submit")) { // "Submit" button clicked
            String childName = nameField.getText();
            String parentName = parentNameField.getText();
            String contactNumber = contactField.getText();
            String date = enterDateField.getText();
            String timeSlot = timeField.getText();

            // Check if any field is empty
            if (childName.isEmpty() || parentName.isEmpty() || contactNumber.isEmpty() || date.isEmpty() || timeSlot.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else if (!contactNumber.matches("\\d+")) { // Validate that contact number contains only digits
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid phone number (digits only).", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }else {
                // Validate date format
                try {
                    java.text.DateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
                    dateFormat.setLenient(false); // Ensure strict parsing
                    dateFormat.parse(date); // Try to parse the date
                    // If parsing succeeds, proceed with further processing
                    System.out.println("Child's Name: " + childName);
                    System.out.println("Parent's Name: " + parentName);
                    System.out.println("Contact Number: " + contactNumber);
                    System.out.println("Date: " + date);
                    System.out.println("Time Slot: " + timeSlot);

                    BookMYSQL.getInstance().insertChristening(Map.of(
                            "childName", childName,
                            "parentName", parentName,
                            "contactNumber", contactNumber,
                            "date", date,
                            "timeSlot", timeSlot,
                            "user_id", userId
                    ), dialog);
                } catch (java.text.ParseException e) {
                    // Show error if date is invalid
                    javax.swing.JOptionPane.showMessageDialog(this, "Invalid date format. Please use YYYY-MM-DD.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            System.out.println("User canceled the input.");
            dialog.dispose(); // Dispose of the dialog
        }
    }

    // This will show the wedding
    void showWedding(){
        // Create a panel to hold input fields
        javax.swing.JPanel panel = new javax.swing.JPanel();
        panel.setLayout(new java.awt.GridLayout(0, 2, 5, 5)); // Grid layout for labels and fields

// Add input fields
        panel.add(new javax.swing.JLabel("Enter Groom's Name:"));
        javax.swing.JTextField groomField = new javax.swing.JTextField();
        panel.add(groomField);

        panel.add(new javax.swing.JLabel("Enter Bride's Name:"));
        javax.swing.JTextField brideField = new javax.swing.JTextField();
        panel.add(brideField);

        panel.add(new javax.swing.JLabel("Enter Contact Number:"));
        javax.swing.JTextField contactField = new javax.swing.JTextField();
        panel.add(contactField);

        panel.add(new javax.swing.JLabel("Enter Date (YYYY-MM-DD):"));
        javax.swing.JTextField enterDateField = new javax.swing.JTextField();
        panel.add(enterDateField);

        panel.add(new javax.swing.JLabel("Enter Time Slot:"));
        javax.swing.JTextField timeField = new javax.swing.JTextField();
        panel.add(timeField);

// Custom button options
        Object[] options = {"Submit", "Cancel"};

// Wrap JOptionPane in a JDialog
        javax.swing.JOptionPane optionPane = new javax.swing.JOptionPane(
                panel,
                javax.swing.JOptionPane.PLAIN_MESSAGE,
                javax.swing.JOptionPane.OK_CANCEL_OPTION,
                null,
                options,
                options[0]
        );
        javax.swing.JDialog dialog = optionPane.createDialog(this, "Enter Wedding Details");
        dialog.setVisible(true);

// Handle user input
        Object selectedValue = optionPane.getValue();
        if (selectedValue != null && selectedValue.equals("Submit")) { // "Submit" button clicked
             String groomName = groomField.getText();
              String brideName = brideField.getText();
            String contactNumber = contactField.getText();
            String date = enterDateField.getText();
            String timeSlot = timeField.getText();

            // Check if any field is empty
            if (groomName.isEmpty() || brideName.isEmpty() || contactNumber.isEmpty() || date.isEmpty() || timeSlot.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }else if (!contactNumber.matches("\\d+")) { // Validate that contact number contains only digits
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid phone number (digits only).", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            } else {
                // Validate date format
                try {
                    java.text.DateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
                    dateFormat.setLenient(false); // Ensure strict parsing
                    dateFormat.parse(date); // Try to parse the date
                    // If parsing succeeds, proceed with further processing
                    System.out.println("Child's Name: " + groomName);
                    System.out.println("Parent's Name: " + brideName);
                    System.out.println("Contact Number: " + contactNumber);
                    System.out.println("Date: " + date);
                    System.out.println("Time Slot: " + timeSlot);
                    BookMYSQL.getInstance().insertWedding(Map.of(
                            "groom_name", groomName,
                            "brides_name", brideName,
                            "contactNumber", contactNumber,
                            "date", date,
                            "timeSlot", timeSlot,
                            "user_id", userId
                    ), dialog);
                } catch (java.text.ParseException e) {
                    // Show error if date is invalid
                    javax.swing.JOptionPane.showMessageDialog(this, "Invalid date format. Please use YYYY-MM-DD.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            System.out.println("User canceled the input.");
            dialog.dispose(); // Dispose of the dialog
        }
    }

    void showFuneral(){
        // Create a panel to hold input fields
        javax.swing.JPanel panel = new javax.swing.JPanel();
        panel.setLayout(new java.awt.GridLayout(0, 2, 5, 5)); // Grid layout for labels and fields

// Add input fields
        panel.add(new javax.swing.JLabel("Enter Deceased's Name:"));
        javax.swing.JTextField desceasedField = new javax.swing.JTextField();
        panel.add(desceasedField);

        panel.add(new javax.swing.JLabel("Enter Family Representative's Name:"));
        javax.swing.JTextField representativeField = new javax.swing.JTextField();
        panel.add(representativeField);

        panel.add(new javax.swing.JLabel("Enter Contact Number:"));
        javax.swing.JTextField contactField = new javax.swing.JTextField();
        panel.add(contactField);

        panel.add(new javax.swing.JLabel("Enter Date (YYYY-MM-DD):"));
        javax.swing.JTextField enterDateField = new javax.swing.JTextField();
        panel.add(enterDateField);

        panel.add(new javax.swing.JLabel("Enter Time Slot:"));
        javax.swing.JTextField timeField = new javax.swing.JTextField();
        panel.add(timeField);

// Custom button options
        Object[] options = {"Submit", "Cancel"};

// Wrap JOptionPane in a JDialog
        javax.swing.JOptionPane optionPane = new javax.swing.JOptionPane(
                panel,
                javax.swing.JOptionPane.PLAIN_MESSAGE,
                javax.swing.JOptionPane.OK_CANCEL_OPTION,
                null,
                options,
                options[0]
        );
        javax.swing.JDialog dialog = optionPane.createDialog(this, "Enter Funeral Details");
        dialog.setVisible(true);

// Handle user input
        Object selectedValue = optionPane.getValue();
        if (selectedValue != null && selectedValue.equals("Submit")) { // "Submit" button clicked
            String deceasedName = desceasedField.getText();
            String familyRepName = representativeField.getText();
            String contactNumber = contactField.getText();
            String date = enterDateField.getText();
            String timeSlot = timeField.getText();

            // Check if any field is empty
            if (deceasedName.isEmpty() || familyRepName.isEmpty() || contactNumber.isEmpty() || date.isEmpty() || timeSlot.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else if (!contactNumber.matches("\\d+")) { // Validate that contact number contains only digits
                javax.swing.JOptionPane.showMessageDialog(this, "Please enter a valid phone number (digits only).", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
            else {
                // Validate date format
                try {
                    java.text.DateFormat dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd");
                    dateFormat.setLenient(false); // Ensure strict parsing
                    dateFormat.parse(date); // Try to parse the date
                    // If parsing succeeds, proceed with further processing
                    System.out.println("Child's Name: " + deceasedName);
                    System.out.println("Parent's Name: " + familyRepName);
                    System.out.println("Contact Number: " + contactNumber);
                    System.out.println("Date: " + date);
                    System.out.println("Time Slot: " + timeSlot);
                    BookMYSQL.getInstance().insertFuneral(Map.of(
                            "deceased_name", deceasedName,
                            "family_rep_name", familyRepName,
                            "contactNumber", contactNumber,
                            "date", date,
                            "timeSlot", timeSlot,
                            "user_id", userId
                    ), dialog);
                } catch (java.text.ParseException e) {
                    // Show error if date is invalid
                    javax.swing.JOptionPane.showMessageDialog(this, "Invalid date format. Please use YYYY-MM-DD.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            System.out.println("User canceled the input.");
            dialog.dispose(); // Dispose of the dialog
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookAnEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookAnEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookAnEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookAnEvent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookAnEvent(userId).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
