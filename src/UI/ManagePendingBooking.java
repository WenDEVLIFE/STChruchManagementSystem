/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import database.BookMYSQL;
import model.ReservationModel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author Frouen Junior
 */
public class ManagePendingBooking extends javax.swing.JFrame {
    private DefaultTableModel bookingModel;
    List<ReservationModel> reservationList;
    /**
     * Creates new form ManagePendingBooking
     */
    public ManagePendingBooking() {
        initComponents();
        String columnNames[] = {"Reservation ID", "Event", "Date", "Time", "Status"};
        bookingModel = new DefaultTableModel(columnNames, 0);
        jTable1.setModel(bookingModel);
        loadBookings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel3.setText("MANAGE PENDING BOOKING");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Reservation ID", "Name", "Event Type", "Date", "Time", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Reject");
        jButton1.setActionCommand("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Back to Main Menu");
        jButton4.setActionCommand("");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel2.setText("Options");

        jButton2.setText("Accept");
        jButton2.setActionCommand("");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(114, 114, 114))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // This is for rejection
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            String reservationID = (String) bookingModel.getValueAt(selectedRow, 0);
            String event = (String) bookingModel.getValueAt(selectedRow, 1);
            String date = (String) bookingModel.getValueAt(selectedRow, 2);
            String time = (String) bookingModel.getValueAt(selectedRow, 3);
            String status = "Rejected";

            JPanel panel = new JPanel();
            JLabel label = new JLabel("Reason for rejecting the booking:");
            JTextField textField = new JTextField(20);
            panel.add(label);

            panel.add(textField);

            // Custom button options
            Object[] options = {"Submit", "Cancel"};

            // Wrap JOptionPane in a JDialog
            javax.swing.JOptionPane optionPane = new javax.swing.JOptionPane(
                    panel,
                    javax.swing.JOptionPane.PLAIN_MESSAGE,
                    javax.swing.JOptionPane.OK_CANCEL_OPTION,
                    null,
                    options,
                    options[0]
            );
            javax.swing.JDialog dialog = optionPane.createDialog(this, "Reject");
            dialog.setVisible(true);

            // Get the selected option
            Object selectedValue = optionPane.getValue();

            if (selectedValue == options[0]) {
                // User clicked "Save"
                String reason = textField.getText();
                // Handle the reason for rejection here
                // Update the status in the database
                BookMYSQL.rejected(reservationID, reason, status, dialog);
                JOptionPane.showMessageDialog(this, "The Booking " + reservationID + " has been rejected.");
                loadBookings();
            } else {
                // User clicked "Cancel" or closed the dialog
                System.out.println("Rejection cancelled.");
                dialog.dispose();
            }

        } else {
            JOptionPane.showMessageDialog(this, "Please select a booking to reject.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        AdminMainMenu adminmenu = new AdminMainMenu();
        adminmenu.setVisible(true);
        adminmenu.setResizable(false);
        this.dispose(); // Close the current window
    }//GEN-LAST:event_jButton4ActionPerformed

    // This is for the approved
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            String reservationID = (String) bookingModel.getValueAt(selectedRow, 0);
            String event = (String) bookingModel.getValueAt(selectedRow, 1);
            String date = (String) bookingModel.getValueAt(selectedRow, 2);
            String time = (String) bookingModel.getValueAt(selectedRow, 3);
            String status = "Accepted";

            // Update the status in the database
            BookMYSQL.updateReservationStatus(reservationID, status);
            JOptionPane.showMessageDialog(this, "Booking " + reservationID + " has been approved.");
            loadBookings();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a booking to approve.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    void loadBookings() {
        // This method should load the bookings from the database and populate the table
        // For now, we will just add some dummy data
        bookingModel.setRowCount(0); // Clear existing rows
        reservationList = BookMYSQL.getReservationPending();

        for (ReservationModel reservation : reservationList) {
            String[] rowData = {
                    reservation.getReservationID(),
                    reservation.getEvent(),
                    reservation.getDate(),
                    reservation.getTime(),
                    reservation.getStatus()
            };
            bookingModel.addRow(rowData);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagePendingBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagePendingBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagePendingBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagePendingBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagePendingBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
